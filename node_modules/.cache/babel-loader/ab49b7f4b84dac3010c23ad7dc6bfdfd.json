{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ravisaradev/pro/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ravisaradev/pro/todo-app/src/components/TaskList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  width: 309px;\\n  padding: 20px;\\n  color: white;\\n  margin-bottom: 10px;\\n  background-color: #414745;\\n  border-radius: 10px;\\n  text-decoration: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport styled from \"styled-components\";\nvar TodoForm = styled.form(_templateObject());\nexport var TaskList = function TaskList(_ref) {\n  var storeContext = _ref.storeContext;\n  var store = useContext(storeContext);\n  return useObserver(function () {\n    return React.createElement(React.Fragment, null, store.tasks.map(function (task) {\n      return React.createElement(TodoForm, {\n        key: task.id,\n        onSubmit: function onSubmit(e) {\n          store.changeState(task.id);\n          console.log(task.id);\n          e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, task.id, \". \", task.state === true ? \"Done\" : \"Pending\", \" | \", task.name), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Complete\"));\n    }));\n  });\n};","map":{"version":3,"sources":["/home/ravisaradev/pro/todo-app/src/components/TaskList.js"],"names":["React","useContext","useObserver","styled","TodoForm","form","TaskList","storeContext","store","tasks","map","task","id","e","changeState","console","log","preventDefault","state","name"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAV,mBAAd;AAaA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC5C,MAAMC,KAAK,GAAGP,UAAU,CAACM,YAAD,CAAxB;AAEA,SAAOL,WAAW,CAAC;AAAA,WACjB,0CACGM,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,aACnB,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,QAAA,QAAQ,EAAE,kBAAAC,CAAC,EAAI;AACbL,UAAAA,KAAK,CAACM,WAAN,CAAkBH,IAAI,CAACC,EAAvB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,EAAjB;AACAC,UAAAA,CAAC,CAACI,cAAF;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,IAAI,CAACC,EADR,QACcD,IAAI,CAACO,KAAL,KAAe,IAAf,GAAsB,MAAtB,GAA+B,SAD7C,SAC2DP,IAAI,CAACQ,IADhE,CATF,EAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CADmB;AAAA,KAApB,CADH,CADiB;AAAA,GAAD,CAAlB;AAoBD,CAvBM","sourcesContent":["import React, { useContext } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport styled from \"styled-components\";\n\nconst TodoForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 309px;\n  padding: 20px;\n  color: white;\n  margin-bottom: 10px;\n  background-color: #414745;\n  border-radius: 10px;\n  text-decoration: none;\n`;\n\nexport const TaskList = ({ storeContext }) => {\n  const store = useContext(storeContext);\n\n  return useObserver(() => (\n    <>\n      {store.tasks.map(task => (\n        <TodoForm\n          key={task.id}\n          onSubmit={e => {\n            store.changeState(task.id);\n            console.log(task.id);\n            e.preventDefault();\n          }}\n        >\n          <input type=\"submit\"></input>\n          <p>\n            {task.id}. {task.state === true ? \"Done\" : \"Pending\"} | {task.name}\n          </p>\n          <button type=\"submit\">Complete</button>\n        </TodoForm>\n      ))}\n    </>\n  ));\n};\n"]},"metadata":{},"sourceType":"module"}