{"ast":null,"code":"var _jsxFileName = \"/home/ravisaradev/pro/todo-app/src/App.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport { useLocalStore, useObserver } from \"mobx-react\";\nimport { AddTask } from \"./components/AddTask\";\nimport { TaskList } from \"./components/TaskList\";\nvar StoreContext = React.createContext();\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children;\n  var taskStore = useLocalStore(function () {\n    return {\n      tasks: [{\n        id: 1,\n        name: \"Complete portfolio\",\n        state: true\n      }, {\n        id: 2,\n        name: \"Filish webdesign\",\n        state: false\n      }],\n      addTask: function addTask(task) {\n        taskStore.tasks.push({\n          id: taskStore.tasks.length + 1,\n          name: task,\n          state: false\n        });\n      },\n      changeState: function changeState(taskId) {\n        taskStore.tasks[taskId - 1].state = !taskStore.tasks[taskId - 1].state;\n      }\n    };\n  });\n  return React.createElement(StoreContext.Provider, {\n    value: taskStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, children);\n};\n\nexport default function App() {\n  return useObserver(function () {\n    return React.createElement(StoreProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(AddTask, {\n      storeContext: StoreContext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      storeContext: StoreContext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  });\n}","map":{"version":3,"sources":["/home/ravisaradev/pro/todo-app/src/App.js"],"names":["React","useLocalStore","useObserver","AddTask","TaskList","StoreContext","createContext","StoreProvider","children","taskStore","tasks","id","name","state","addTask","task","push","length","changeState","taskId","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,IAAMC,YAAY,GAAGL,KAAK,CAACM,aAAN,EAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACtC,MAAMC,SAAS,GAAGR,aAAa,CAAC;AAAA,WAAO;AACrCS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,kBAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANK,CAD8B;AAarCC,MAAAA,OAAO,EAAE,iBAAAC,IAAI,EAAI;AACfN,QAAAA,SAAS,CAACC,KAAV,CAAgBM,IAAhB,CAAqB;AACnBL,UAAAA,EAAE,EAAEF,SAAS,CAACC,KAAV,CAAgBO,MAAhB,GAAyB,CADV;AAEnBL,UAAAA,IAAI,EAAEG,IAFa;AAGnBF,UAAAA,KAAK,EAAE;AAHY,SAArB;AAKD,OAnBoC;AAoBrCK,MAAAA,WAAW,EAAE,qBAAAC,MAAM,EAAI;AACrBV,QAAAA,SAAS,CAACC,KAAV,CAAgBS,MAAM,GAAG,CAAzB,EAA4BN,KAA5B,GAAoC,CAACJ,SAAS,CAACC,KAAV,CAAgBS,MAAM,GAAG,CAAzB,EAA4BN,KAAjE;AACD;AAtBoC,KAAP;AAAA,GAAD,CAA/B;AAyBA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEJ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CD,QAA1C,CADF;AAGD,CA7BD;;AA+BA,eAAe,SAASY,GAAT,GAAe;AAC5B,SAAOlB,WAAW,CAAC;AAAA,WACjB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAEG,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAEA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADiB;AAAA,GAAD,CAAlB;AAMD","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport { useLocalStore, useObserver } from \"mobx-react\";\n\nimport { AddTask } from \"./components/AddTask\";\nimport { TaskList } from \"./components/TaskList\";\n\nconst StoreContext = React.createContext();\n\nconst StoreProvider = ({ children }) => {\n  const taskStore = useLocalStore(() => ({\n    tasks: [\n      {\n        id: 1,\n        name: \"Complete portfolio\",\n        state: true\n      },\n      {\n        id: 2,\n        name: \"Filish webdesign\",\n        state: false\n      }\n    ],\n    addTask: task => {\n      taskStore.tasks.push({\n        id: taskStore.tasks.length + 1,\n        name: task,\n        state: false\n      });\n    },\n    changeState: taskId => {\n      taskStore.tasks[taskId - 1].state = !taskStore.tasks[taskId - 1].state;\n    }\n  }));\n\n  return (\n    <StoreContext.Provider value={taskStore}>{children}</StoreContext.Provider>\n  );\n};\n\nexport default function App() {\n  return useObserver(() => (\n    <StoreProvider>\n        <AddTask storeContext={StoreContext} />\n        <TaskList storeContext={StoreContext} />\n    </StoreProvider>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}