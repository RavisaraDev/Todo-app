{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ravisaradev/pro/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ravisaradev/pro/todo-app/src/App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport \"./styles.css\";\nimport styled from 'styled-components';\nimport { useLocalStore, useObserver } from \"mobx-react\";\nimport { AddTask } from \"./components/AddTask\";\nimport { TaskList } from \"./components/TaskList\";\nvar Wrapper = styled.div(_templateObject());\nvar StoreContext = React.createContext();\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children;\n  var taskStore = useLocalStore(function () {\n    return {\n      tasks: [{\n        id: 1,\n        name: \"Complete portfolio\",\n        state: true\n      }, {\n        id: 2,\n        name: \"Finish web-design\",\n        state: false\n      }],\n      addTask: function addTask(task) {\n        taskStore.tasks.push({\n          id: taskStore.tasks.length + 1,\n          name: task,\n          state: false\n        });\n      },\n      changeState: function changeState(taskId) {\n        taskStore.tasks[taskId - 1].state = !taskStore.tasks[taskId - 1].state;\n      }\n    };\n  });\n  return React.createElement(StoreContext.Provider, {\n    value: taskStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, children);\n};\n\nexport default function App() {\n  return useObserver(function () {\n    return React.createElement(StoreProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"TODO\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AddTask, {\n      storeContext: StoreContext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      storeContext: StoreContext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  });\n}","map":{"version":3,"sources":["/home/ravisaradev/pro/todo-app/src/App.js"],"names":["React","styled","useLocalStore","useObserver","AddTask","TaskList","Wrapper","div","StoreContext","createContext","StoreProvider","children","taskStore","tasks","id","name","state","addTask","task","push","length","changeState","taskId","App"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,IAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV,mBAAb;AAOA,IAAMC,YAAY,GAAGR,KAAK,CAACS,aAAN,EAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACtC,MAAMC,SAAS,GAAGV,aAAa,CAAC;AAAA,WAAO;AACrCW,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,mBAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANK,CAD8B;AAarCC,MAAAA,OAAO,EAAE,iBAAAC,IAAI,EAAI;AACfN,QAAAA,SAAS,CAACC,KAAV,CAAgBM,IAAhB,CAAqB;AACnBL,UAAAA,EAAE,EAAEF,SAAS,CAACC,KAAV,CAAgBO,MAAhB,GAAyB,CADV;AAEnBL,UAAAA,IAAI,EAAEG,IAFa;AAGnBF,UAAAA,KAAK,EAAE;AAHY,SAArB;AAKD,OAnBoC;AAoBrCK,MAAAA,WAAW,EAAE,qBAAAC,MAAM,EAAI;AACrBV,QAAAA,SAAS,CAACC,KAAV,CAAgBS,MAAM,GAAG,CAAzB,EAA4BN,KAA5B,GAAoC,CAACJ,SAAS,CAACC,KAAV,CAAgBS,MAAM,GAAG,CAAzB,EAA4BN,KAAjE;AACD;AAtBoC,KAAP;AAAA,GAAD,CAA/B;AAyBA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEJ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CD,QAA1C,CADF;AAGD,CA7BD;;AA+BA,eAAe,SAASY,GAAT,GAAe;AAC5B,SAAOpB,WAAW,CAAC;AAAA,WACjB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAEK,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAEA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAFF,CADF,CADiB;AAAA,GAAD,CAAlB;AAWD","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport styled from 'styled-components'\nimport { useLocalStore, useObserver } from \"mobx-react\";\n\nimport { AddTask } from \"./components/AddTask\";\nimport { TaskList } from \"./components/TaskList\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nconst StoreContext = React.createContext();\n\nconst StoreProvider = ({ children }) => {\n  const taskStore = useLocalStore(() => ({\n    tasks: [\n      {\n        id: 1,\n        name: \"Complete portfolio\",\n        state: true\n      },\n      {\n        id: 2,\n        name: \"Finish web-design\",\n        state: false\n      }\n    ],\n    addTask: task => {\n      taskStore.tasks.push({\n        id: taskStore.tasks.length + 1,\n        name: task,\n        state: false\n      });\n    },\n    changeState: taskId => {\n      taskStore.tasks[taskId - 1].state = !taskStore.tasks[taskId - 1].state;\n    }\n  }));\n\n  return (\n    <StoreContext.Provider value={taskStore}>{children}</StoreContext.Provider>\n  );\n};\n\nexport default function App() {\n  return useObserver(() => (\n    <StoreProvider>\n      <Wrapper>\n        <h2>TODO</h2>\n        <div>\n        <AddTask storeContext={StoreContext} />\n        <TaskList storeContext={StoreContext} />\n        </div>\n      </Wrapper>\n    </StoreProvider>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}