{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ravisaradev/pro/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ravisaradev/pro/todo-app/src/components/TaskList.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n   background-color: #0ad752;;\\n   padding: 5px 10px;\\n   border-radius: 5px;\\n}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n   background-color: #ff9900c7;\\n   padding: 5px 10px;\\n   border-radius: 5px;\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  width: 30rem;\\n  padding: 20px;\\n  color: white;\\n  margin-bottom: 10px;\\n  background-color: #414745;\\n  border-radius: 10px;\\n  text-decoration: none;\\n  \\n  p{\\n    margin: 0px 10px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport { useObserver } from \"mobx-react\";\nimport styled from \"styled-components\";\nvar TodoForm = styled.form(_templateObject());\nvar Pending = styled.div(_templateObject2());\nvar Done = styled.div(_templateObject3());\nexport var TaskList = function TaskList(_ref) {\n  var storeContext = _ref.storeContext;\n  var store = useContext(storeContext);\n  return useObserver(function () {\n    return React.createElement(React.Fragment, null, store.tasks.map(function (task) {\n      return (// <TodoForm\n        //     key={task.id}\n        //     name=\"todoList\"\n        //     onSubmit={e => {\n        //         store.changeState(task.id);\n        //         console.log(task.id);\n        //         e.preventDefault();\n        //     }}\n        // >\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, task.name)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, task.state === true ? React.createElement(Done, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Done\") : React.createElement(Pending, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Pending\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          onClick: store.changeState(task.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Make as complete\"))) // </TodoForm>\n\n      );\n    }));\n  });\n};","map":{"version":3,"sources":["/home/ravisaradev/pro/todo-app/src/components/TaskList.js"],"names":["React","useContext","useObserver","styled","TodoForm","form","Pending","div","Done","TaskList","storeContext","store","tasks","map","task","name","state","changeState","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAV,mBAAd;AAiBA,IAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,oBAAb;AAOA,IAAMC,IAAI,GAAGL,MAAM,CAACI,GAAV,oBAAV;AAOA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;AACxC,MAAMC,KAAK,GAAGV,UAAU,CAACS,YAAD,CAAxB;AAEA,SAAOR,WAAW,CAAC;AAAA,WACf,0CACKS,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,aACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,IAAI,CAACC,IADV,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,IAAI,CAACE,KAAL,KAAe,IAAf,GAAsB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtB,GAA0C,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhD,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEL,KAAK,CAACM,WAAN,CAAkBH,IAAI,CAACI,EAAvB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CAPJ,CAViB,CAqBjB;;AArBiB;AAAA,KAApB,CADL,CADe;AAAA,GAAD,CAAlB;AA2BH,CA9BM","sourcesContent":["import React, {useContext} from \"react\";\nimport {useObserver} from \"mobx-react\";\nimport styled from \"styled-components\";\n\nconst TodoForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 30rem;\n  padding: 20px;\n  color: white;\n  margin-bottom: 10px;\n  background-color: #414745;\n  border-radius: 10px;\n  text-decoration: none;\n  \n  p{\n    margin: 0px 10px;\n  }\n`;\n\nconst Pending = styled.div`\n   background-color: #ff9900c7;\n   padding: 5px 10px;\n   border-radius: 5px;\n}\n`;\n\nconst Done = styled.div`\n   background-color: #0ad752;;\n   padding: 5px 10px;\n   border-radius: 5px;\n}\n`;\n\nexport const TaskList = ({storeContext}) => {\n    const store = useContext(storeContext);\n\n    return useObserver(() => (\n        <>\n            {store.tasks.map(task => (\n                // <TodoForm\n                //     key={task.id}\n                //     name=\"todoList\"\n                //     onSubmit={e => {\n                //         store.changeState(task.id);\n                //         console.log(task.id);\n                //         e.preventDefault();\n                //     }}\n                // >\n                <div>\n                    <div>\n                        <p>\n                            {task.name}\n                        </p>\n                    </div>\n                    <div>{task.state === true ? <Done>Done</Done> : <Pending>Pending</Pending>}</div>\n                    <div>\n                        <button type=\"submit\" onClick={store.changeState(task.id)}>Make as complete</button>\n                    </div>\n                </div>\n                // </TodoForm>\n            ))}\n        </>\n    ));\n};\n"]},"metadata":{},"sourceType":"module"}